{"version":3,"sources":["panels/Home.js","panels/Quiz.js","panels/Congrats.js","App.js","index.js"],"names":["Home","props","state","activePanel","fetchedUser","authToken","test","console","log","this","id","name","style","margin","lineHeight","desc","src","img","width","alt","size","level","onClick","go","data-to","React","Component","osName","platform","Quiz","items","currentQuestion","answers","questionCount","questionIndex","selectedAnswerId","answerIds","nextQuestion","bind","onAnswerChanged","showCongrats","question","questions","find","el","is_first","setState","sendResults","answer","next_question_id","isFinish","req","external_id","fetch","method","headers","body","JSON","stringify","then","response","json","responseJson","e","answerId","Number","currentTarget","value","left","IOS","text","title","length","map","item","index","key","checked","onChange","before","Congrats","result","products","url","congr","message","textAlign","href","target","App","d","dataset","to","popout","isLoaded","getTest","sendUserData","connect","subscribe","detail","type","data","send","first_name","last_name","photo","photo_100","res","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.98d9ad83.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel'\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader'\nimport Group from '@vkontakte/vkui/dist/components/Group/Group'\nimport Div from '@vkontakte/vkui/dist/components/Div/Div'\nimport Separator from '@vkontakte/vkui/dist/components/Separator/Separator'\nimport Button from '@vkontakte/vkui/dist/components/Button/Button'\n\nclass Home extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            activePanel: 'home',\n            fetchedUser: null,\n            authToken: null,\n            test: []\n        }\n    }\n\n    componentDidMount() {\n        console.log(this.props)\n    }\n\n    render() {\n        let {\n            id\n        } = this.props\n        return (\n            <Panel id={id}>\n                <PanelHeader>Пройди тест</PanelHeader>\n                <Group>\n                    <Div>\n                        <h1>{this.props.test.name}</h1>\n                        <Separator style={{margin: '12px 0'}}/>\n                        <p style={{lineHeight: '1.5'}}>\n                            {this.props.test.desc}\n                        </p>\n                        <img src={'https://demo18.alpha.vkhackathon.com/storage/' + this.props.test.img}\n                             style={{width: '100%'}} alt=\"\"/>\n                        <Div>\n                            <Button size=\"xl\" level=\"secondary\"\n                                    onClick={this.props.go}\n                                    data-to=\"quiz\">Начать тест!</Button>\n                        </Div>\n                    </Div>\n                </Group>\n            </Panel>\n        )\n    }\n}\n\nHome.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n    test: PropTypes.object.isRequired,\n    fetchedUser: PropTypes.shape({\n        photo_200: PropTypes.string,\n        first_name: PropTypes.string,\n        last_name: PropTypes.string,\n        city: PropTypes.shape({\n            title: PropTypes.string,\n        }),\n    }),\n}\n\nexport default Home\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {platform, IOS} from '@vkontakte/vkui'\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel'\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader'\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton'\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back'\nimport Icon24Back from '@vkontakte/icons/dist/24/back'\nimport Separator from '@vkontakte/vkui/dist/components/Separator/Separator'\nimport './Persik.css'\nimport Div from \"@vkontakte/vkui/dist/components/Div/Div\"\nimport FormLayout from \"@vkontakte/vkui/dist/components/FormLayout/FormLayout\"\nimport Radio from \"@vkontakte/vkui/dist/components/Radio/Radio\"\nimport Button from \"@vkontakte/vkui/dist/components/Button/Button\"\nimport InfoRow from \"@vkontakte/vkui/dist/components/InfoRow/InfoRow\"\nimport Progress from \"@vkontakte/vkui/dist/components/Progress/Progress\"\n// import FixedLayout from \"@vkontakte/vkui/dist/components/FixedLayout/FixedLayout\"\nimport Icon24BrowserForward from '@vkontakte/icons/dist/24/browser_forward'\n\nconst osName = platform()\n\nclass Quiz extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            activePanel: 'home',\n            fetchedUser: null,\n            authToken: null,\n            items: [],\n            currentQuestion: {},\n            answers: [],\n            questionCount: 10,\n            questionIndex: 0,\n            selectedAnswerId: null,\n            answerIds: []\n        }\n        this.nextQuestion = this.nextQuestion.bind(this)\n        this.onAnswerChanged = this.onAnswerChanged.bind(this)\n        this.showCongrats = this.showCongrats.bind(this)\n    }\n\n    componentDidMount() {\n        const question = this.props.questions.find(el => el.is_first === true)\n        this.setState({\n            currentQuestion: question,\n            answers: question.answers,\n            questionIndex: 0,\n            selectedAnswerId: question.answers[0].id\n        })\n    }\n\n    showCongrats() {\n        this.sendResults()\n        // this.props.go('congrats')\n    }\n    nextQuestion() {\n        const answer = this.state.answers.find(el => el.id === this.state.selectedAnswerId)\n        this.setState({answerIds: [...this.state.answerIds, answer.id]})\n        if (answer.next_question_id === null) {\n            this.setState({isFinish: true})\n        } else {\n            const question = this.props.questions.find(el => el.id === answer.next_question_id)\n            this.setState({\n                currentQuestion: question,\n                answers: question.answers,\n                questionIndex: this.state.questionIndex + 1,\n                selectedAnswerId: question.answers[0].id\n            })\n        }\n\n    }\n\n    sendResults() {\n            var req = {\n                external_id: this.props.fetchedUser.id,\n                answers: this.state.answerIds\n            };\n        this.setState({answerIds: [...this.state.answerIds, this.state.selectedAnswerId]})\n\n        fetch('https://demo18.alpha.vkhackathon.com/answer', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(req)\n            })\n            .then((response) => response.json())\n            .then((responseJson) => (this.props.go('congrats', responseJson)))\n            console.log(req)\n    }\n    onAnswerChanged(e) {\n        const answerId = Number(e.currentTarget.value)\n        const answer = this.state.answers.find(el => el.id === answerId)\n        if (answer.next_question_id === null) {\n            this.setState({isFinish: true})\n        }\n        this.setState({\n            selectedAnswerId: answerId\n        })\n    }\n\n    render() {\n        let {\n            id\n        } = this.props\n\n        let {\n            currentQuestion,\n            questionIndex,\n            answers\n        } = this.state\n\n        return (\n            <Panel id={id}>\n                <PanelHeader\n                    left={<HeaderButton onClick={this.props.go} data-to=\"home\">\n                        {osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n                    </HeaderButton>}\n                >\n                    Persik\n                </PanelHeader>\n                <Div>\n                    <h1>Вопрос №{questionIndex + 1}</h1>\n                    <Separator style={{margin: '12px 0'}}/>\n                    <p style={{lineHeight: '1.5'}}>{currentQuestion.text}</p>\n                    <InfoRow title={this.props.id}>\n                        <Progress value={this.state.questionIndex / this.props.questions.length * 100}/>\n                    </InfoRow>\n                    <Separator style={{margin: '12px 0'}}/>\n                    <img src={'https://demo18.alpha.vkhackathon.com/storage/' + currentQuestion.img}\n                         style={{width: '100%'}} alt=\"\"/>\n                    <FormLayout>\n                        <div>\n                            {\n                                answers.length > 0 && answers.map((item, index) => (\n                                    <Radio name=\"answer\"\n                                           key={index}\n                                           value={item.id}\n                                           checked={this.state.selectedAnswerId === item.id}\n                                           onChange={this.onAnswerChanged}\n                                    >\n                                        {item.text}\n                                    </Radio>\n                                ))\n                            }\n                        </div>\n                    </FormLayout>\n                    <br/>\n                    {this.state.isFinish ?\n                        <Button size=\"xl\" level=\"commerce\"\n                                onClick={this.showCongrats}\n                                data-to=\"congrats\">Узнать результаты!</Button>\n                        :\n                        <Button before={<Icon24BrowserForward/>} level=\"secondary\" onClick={this.nextQuestion}\n                                size=\"xl\">Следующий\n                            вопрос</Button>\n                    }\n                </Div>\n            </Panel>\n        )\n    }\n}\n\nQuiz.propTypes = {\n    id: PropTypes.string.isRequired,\n    fetchedUser: PropTypes.object.isRequired,\n    go: PropTypes.func.isRequired,\n    questions: PropTypes.object.isRequired\n}\nexport default Quiz\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel'\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader'\nimport Div from \"@vkontakte/vkui/dist/components/Div/Div\"\nimport Group from '@vkontakte/vkui/dist/components/Group/Group'\nimport Separator from '@vkontakte/vkui/dist/components/Separator/Separator'\nimport { Link } from '@vkontakte/vkui';\n\nclass Congrats extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            activePanel: 'congrats',\n            fetchedUser: null,\n            authToken: null,\n            result: {\n                products: {\n                    \"id\": 1,\n                    name: \"Вам повезло! Специально для вас у нас есть интересный банковский продукт\",\n                    desc: \"Промсвязь банк\",\n                    url: \"ссылка\",\n                    img: \"Fng2SH6fP7uZ87CQRHv1t9H8EXyRV15c602QnLlo.jpeg\",\n                    \"pivot\": {\n                        \"answer_id\": 1,\n                        \"product_id\": 1\n                    }\n                },\n                result: {\n                    \"id\": 2,\n                    text: \"Хм..Похоже ты лох\",\n                    img: \"Fng2SH6fP7uZ87CQRHv1t9H8EXyRV15c602QnLlo.jpeg\",\n                    \"test_id\": 1\n                }\n            }\n        }\n    }\n\n    componentDidMount() {\n        console.log(this.props)\n    }\n\n    render() {\n        let {\n            id\n        } = this.props\n        return (\n            <Panel id={id}>\n                <PanelHeader>Результат</PanelHeader>\n                <Group>\n                    <Div>\n                        <h1>{this.props.congr.message.result.text}</h1>\n                        <Separator style={{margin: '12px 0'}}/>\n                        <img src={'https://demo18.alpha.vkhackathon.com/storage/' + this.props.congr.message.result.img}\n                             style={{width: '100%'}} alt=\"\"/>\n                    </Div>\n                </Group>\n                <Group>\n                    <Div>\n                        <h1>{this.props.congr.message.products.name}</h1>\n                        <p>{this.props.congr.message.products.desc}</p>\n                        <img src={'https://demo18.alpha.vkhackathon.com/storage/' + this.props.congr.message.products.img}\n                             style={{width: '100%'}} alt=\"\"/>\n                        <br/>\n                        <br/>\n                        <Div style={{textAlign: 'center'}}>\n                            <Link href={this.props.congr.message.products.url} target=\"_blank\">Уже бегу оформлять! 🦄</Link>\n                        </Div>\n                    </Div>\n                </Group>\n\n            </Panel>\n        )\n    }\n}\n\nCongrats.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n    congr: PropTypes.object,\n    fetchedUser: PropTypes.shape({\n        photo_200: PropTypes.string,\n        first_name: PropTypes.string,\n        last_name: PropTypes.string,\n        city: PropTypes.shape({\n            title: PropTypes.string,\n        }),\n    }),\n}\n\nexport default Congrats\n","import React from 'react'\nimport connect from '@vkontakte/vk-connect'\nimport View from '@vkontakte/vkui/dist/components/View/View'\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner'\nimport '@vkontakte/vkui/dist/vkui.css'\n\nimport Home from './panels/Home'\nimport Quiz from './panels/Quiz'\nimport PanelSpinner from \"@vkontakte/vkui/dist/components/PanelSpinner/PanelSpinner\"\nimport Congrats from \"./panels/Congrats\"\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            fetchedUser: null,\n            popout: <ScreenSpinner size='large'/>,\n            activePanel: 'home',\n            test: {},\n            isLoaded: false,\n            congr: null\n        }\n        this.getTest = this.getTest.bind(this)\n        this.sendUserData = this.sendUserData.bind(this)\n        this.go = this.go.bind(this)\n    }\n\n    componentDidMount() {\n        connect.subscribe((e) => {\n            switch (e.detail.type) {\n                case 'VKWebAppGetUserInfoResult':\n                    this.setState({fetchedUser: e.detail.data})\n                    this.sendUserData();\n                    break\n                default:\n                    console.log(e.detail.type)\n            }\n        })\n        connect.send('VKWebAppGetUserInfo', {})\n        this.getTest()\n        this.setState({popout: null})\n\n    }\n\n    sendUserData() {\n        var req = {\n            external_id: this.state.fetchedUser.id,\n            first_name: this.state.fetchedUser.last_name,\n            last_name: this.state.fetchedUser.first_name,\n            photo: this.state.fetchedUser.photo_100 || null\n        };\n        fetch('https://demo18.alpha.vkhackathon.com/client', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(req)\n        })\n        console.log(req)\n    }\n\n    async getTest() {\n        fetch(\"https://demo18.alpha.vkhackathon.com/test/2\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        test: result,\n                        isLoaded: true,\n                    })\n                },\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error\n                    })\n                }\n            )\n    }\n\n    go = (e, d) => {\n        if (d) {\n            this.setState({congr: d})\n            this.setState({activePanel: e})\n            return;\n        }\n        this.setState({activePanel: e.currentTarget.dataset.to})\n    }\n\n    render() {\n        return (\n            <View activePanel={this.state.activePanel} popout={this.state.popout}>\n                {!this.state.isLoaded ? <PanelSpinner/> :\n                    <Home id='home' fetchedUser={this.state.fetchedUser} test={this.state.test} go={this.go}/>}\n                {!this.state.isLoaded ? <PanelSpinner/> :\n                    <Quiz id='quiz' go={this.go} fetchedUser={this.state.fetchedUser} questions={this.state.test.questions}/>}\n                {!this.state.isLoaded ? <PanelSpinner/> :\n                    <Congrats id='congrats' go={this.go} congr={this.state.congr}fetchedUser={this.state.fetchedUser}/>}\n            </View>\n        )\n    }\n}\n\nexport default App\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}